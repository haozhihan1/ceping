# ===================================================================
# 员工能力测评系统 - 环境变量配置模板
# Employee Assessment System - Environment Configuration Template
# ===================================================================
#
# 🔴 重要提醒：
# 1. 复制此文件为 .env 文件：cp env.example .env
# 2. 根据实际情况修改以下配置值
# 3. 生产环境必须修改所有标记为【必须修改】的配置项
# 4. 请勿将包含真实密钥的 .env 文件提交到Git仓库
#
# ===================================================================

# ===================================================================
# 🔒 安全配置 (Security Configuration)
# ===================================================================

# Flask应用密钥 【必须修改】
# 用于会话加密、CSRF保护等安全功能
# 建议使用32位以上随机字符串
# 生成方法：python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-production-secret-key-change-this-to-random-string-at-least-32-chars

# DeepSeek AI API密钥 【必须修改】
# 用于生成员工能力分析报告
# 获取地址：https://platform.deepseek.com/api_keys
DEEPSEEK_API_KEY=sk-your-actual-deepseek-api-key-here

# 管理员账户配置 【建议修改】
# 系统管理员登录凭据
ADMIN_USERNAME=admin
ADMIN_PASSWORD=Admin123!@#

# ===================================================================
# 🌐 服务器配置 (Server Configuration)
# ===================================================================

# 应用运行环境
# 可选值：development, production, testing
FLASK_ENV=production

# 服务器绑定地址
# 生产环境建议使用 0.0.0.0 监听所有接口
HOST=0.0.0.0

# 服务器端口
# 生产环境通常使用8000端口，由Nginx代理到80端口
PORT=8000

# Gunicorn工作进程数
# 建议设置为：CPU核心数 × 2 + 1
# 查看CPU核心数：nproc
WORKERS=4

# ===================================================================
# 🗄️ 数据库配置 (Database Configuration)
# ===================================================================

# SQLite数据库文件路径
# 开发环境：./new_questions.db
# 生产环境：/home/www/flask_project/data/new_questions.db
DATABASE_PATH=/home/www/flask_project/data/new_questions.db

# ===================================================================
# 📁 文件路径配置 (File Path Configuration)
# ===================================================================

# 日志文件路径
LOG_FILE=/home/www/flask_project/logs/app.log

# 上传文件存储目录
UPLOAD_FOLDER=/home/www/flask_project/uploads

# 备份文件存储目录
BACKUP_FOLDER=/home/www/flask_project/backup

# ===================================================================
# 🔧 应用配置 (Application Configuration)
# ===================================================================

# 调试模式
# 生产环境必须设置为 False
DEBUG=False

# 测试模式
TESTING=False

# 日志级别
# 可选值：DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# 最大请求内容大小（字节）
# 16MB = 16 * 1024 * 1024
MAX_CONTENT_LENGTH=16777216

# 请求超时时间（秒）
REQUEST_TIMEOUT=60

# ===================================================================
# 📊 性能配置 (Performance Configuration)
# ===================================================================

# Gunicorn工作进程类型
# 可选值：sync, gevent, eventlet, tornado
WORKER_CLASS=sync

# 每个进程的最大连接数
WORKER_CONNECTIONS=1000

# 每个进程处理的最大请求数（防止内存泄漏）
MAX_REQUESTS=1000

# 最大请求数的随机抖动
MAX_REQUESTS_JITTER=50

# 工作进程超时时间（秒）
TIMEOUT=30

# Keep-Alive连接超时时间（秒）
KEEPALIVE=2

# ===================================================================
# 🎯 业务配置 (Business Configuration)
# ===================================================================

# AI报告生成超时时间（秒）
REPORT_GENERATION_TIMEOUT=180

# 每个用户最大测评次数限制（0表示无限制）
MAX_ASSESSMENTS_PER_USER=0

# 测评结果缓存时间（秒）
ASSESSMENT_CACHE_DURATION=3600

# 系统维护模式
MAINTENANCE_MODE=False

# ===================================================================
# 📝 其他配置 (Miscellaneous Configuration)
# ===================================================================

# 时区设置
TIMEZONE=Asia/Shanghai

# 语言设置
LANGUAGE=zh_CN

# 分页大小
PAGE_SIZE=50

# 搜索结果最大数量
MAX_SEARCH_RESULTS=1000

# ===================================================================
# 配置验证和帮助
# ===================================================================
#
# 🔍 配置验证命令：
# python -c "
# import os
# from dotenv import load_dotenv
# load_dotenv()
# 
# required_vars = ['SECRET_KEY', 'DEEPSEEK_API_KEY', 'DATABASE_PATH']
# missing = [var for var in required_vars if not os.getenv(var)]
# 
# if missing:
#     print(f'❌ 缺少必需的环境变量: {missing}')
# else:
#     print('✅ 所有必需的环境变量都已设置')
# 
# if os.getenv('SECRET_KEY') == 'your-production-secret-key-change-this-to-random-string-at-least-32-chars':
#     print('⚠️  警告：请修改默认的 SECRET_KEY')
# 
# if os.getenv('DEEPSEEK_API_KEY', '').startswith('sk-your-actual'):
#     print('⚠️  警告：请设置真实的 DEEPSEEK_API_KEY')
# "
#
# 🔧 生成安全密钥：
# python -c "import secrets; print('SECRET_KEY=' + secrets.token_urlsafe(32))"
#
# 🗂️ 文件权限设置（生产环境）：
# chmod 600 .env
# chown www:www .env
#
# ===================================================================
